#
# Upgrade and boot controller and all nodes on the controller
#
- name: Patch controller and all nodes on the controller
  hosts: "{{ myhosts }}"
  tasks:
    - name: Find nodes on controller
      virt: command=list_vms
      register: nodes

    - name: Get node info
      virt: command=info
      register: virt_info

    - name: Patch controller
      yum:
        name: '*'
        state: latest
        update_cache: yes
        exclude: "{{ exclude | default(omit) }}"

    - include_tasks: tasks/puppetrun.yaml

    - name: Patch nodes in serial
      yum:
        name: '*'
        state: latest
        update_cache: yes
        exclude: "{{ exclude | default(omit) }}"
      delegate_to: "{{ item }}"
      when:
        - nodes.list_vms is defined
        - (virt_info[item]['state'] == 'running')
        - not async | default(false)
      with_items: "{{nodes.list_vms}}"

    - name: Patch nodes with async
      yum:
        name: '*'
        state: latest
        update_cache: yes
        exclude: "{{ exclude | default(omit) }}"
      delegate_to: "{{ item }}"
      when:
        - nodes.list_vms is defined
        - (virt_info[item]['state'] == 'running')
        - async | default(false)
      with_items: "{{nodes.list_vms}}"
      register: yum_node_sleeper
      async: 3600
      poll: 0

    - name: Wait for patching of nodes
      async_status:
        id: "{{ item.ansible_job_id }}"
      register: yum_patch_result
      retries: 120
      delay: 30
      until: yum_patch_result.finished
      when:
        - yum_node_sleeper.results is defined
        - async | default(false)
      loop: "{{ yum_node_sleeper.results }}"

    - name: Run puppet on nodes
      puppet:
      delegate_to: "{{ item }}"
      when:
        - nodes.list_vms is defined
        - (virt_info[item]['state'] == 'running')
        - '"admin" not in item'
        - location != "vagrant"
        - exclude is not defined
      ignore_errors: yes
      with_items: "{{nodes.list_vms}}"

    - name: Run Puppet via himlar/provision/puppetrun.sh
      command: /opt/himlar/provision/puppetrun.sh
      delegate_to: "{{ item }}"
      when:
        - nodes.list_vms is defined
        - (virt_info[item]['state'] == 'running')
        - '"admin" in item'
        - location != "vagrant"
        - exclude is not defined
      ignore_errors: yes
      with_items: "{{nodes.list_vms}}"

# Autostart nodes
- import_playbook: autostart_nodes.yaml

# Stop nodes
- import_playbook: manage_nodes.yaml
  vars:
     action: stop

# Sleep  minutts
- name: Sleep while the nodes are shutting down
  hosts: "{{ myhosts }}"
  gather_facts: False
  tasks:
    - pause: minutes=1

# Boot controller

- name: Reboot controller
  hosts: "{{ myhosts }}"
  gather_facts: False
  tasks:
    - reboot:
        reboot_timeout: 1200
