---
- hosts: "{{ myhosts }}"
  vars:
    openrc: '/root/openrc'
    keystonerc: '/root/keystonerc_admin'

  pre_tasks:
    - name: Get node
      shell: "hostname | cut -d- -f2"
      register: node

  tasks:
    - name: Update pools configuration
      shell: "source {{openrc}} && designate-manage pool update --file /etc/designate/pools.yaml"
      when: node.stdout == "dns"

    - name: Install python2-designateclient
      yum:
        name: "python2-designateclient"
        state: present
      when: node.stdout == "identity"

    - name: Check if the zone is present
      shell: "source {{keystonerc}} && openstack zone show customer.{{location}}.uh-iaas.no. -c id -f value"
      register: zone_present
      ignore_errors: yes
      when: node.stdout == "identity"

    - name: Create the admin zone
      shell: "source {{keystonerc}} && openstack zone create customer.{{location}}.uh-iaas.no. --email support@uh-iaas.no"
      when:
        - node.stdout == "identity"
        - zone_present.rc == 1

    - name: Get the zone ID
      shell: "source {{keystonerc}} && openstack zone show customer.{{location}}.uh-iaas.no. -c id -f value"
      register: zone_id
      when: node.stdout == "identity"

    - name: Configure zone ID for handler:nova_fixed
      with_items: "{{ identity_node }}"
      ini_file:
        path: /etc/designate/designate.conf
        section: handler:nova_fixed
        option: zone_id
        value: "{{hostvars[item]['zone_id']['stdout']}}"
        create: no
        backup: yes
      notify:
        - restart designate-api
        - restart designate-central
        - restart designate-mdns
        - restart designate-pool-manager
        - restart designate-sink
      when: node.stdout == "dns"

    - name: Install patch
      yum:
        name: "patch"
        state: present
      when: node.stdout == "dns"

    - patch:
        src:     "~/ansible/files/patches/designate_notification_handler.diff"
        basedir: "/usr/lib/python2.7/site-packages/designate/notification_handler"
        strip:   1
      notify:
        - restart designate-api
        - restart designate-central
        - restart designate-mdns
        - restart designate-pool-manager
        - restart designate-sink
      when: node.stdout == "dns"

  handlers:
    - name: restart designate-api
      systemd:
        name: "designate-api"
        state: restarted
      when: node.stdout == "dns"
    - name: restart designate-central
      systemd:
        name:  designate-central
        state: restarted
      when: node.stdout == "dns"
    - name: restart designate-mdns
      systemd:
        name: "designate-mdns"
        state: restarted
      when: node.stdout == "dns"
    - name: restart designate-pool-manager
      systemd:
        name: "designate-pool-manager"
        state: restarted
      when: node.stdout == "dns"
    - name: restart designate-sink
      systemd:
        name: "designate-sink"
        state: restarted
      when: node.stdout == "dns"
